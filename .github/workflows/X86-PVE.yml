#
# This is free software, lisence use MIT.
#
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# Copyright (C) 2020 LemoFire <https://www.ito.fun>
#
# <https://github.com/P3TERX/Actions-OpenWrt>
# <https://github.com/KFERMercer/OpenWrt-CI>
# <https://github.com/LemoFire/autoOpenWrt>
#

#name: X86-PVE

#on:
#  push:
#    branches:
#      - master
#  schedule:
#    - cron: 0 */12 * * *
#  watch:
#    types: started
    
name: X86-PVE

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update -yqq
          sudo apt full-upgrade -yqq
          sudo apt install -yqq ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
      - name: Clean up space
        run: sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"
      - name: Download lede
        run: |
          git clone https://github.com/coolsnowwolf/lede
          mv ./lede/* ./
      - name: Install addons
        run: |
          echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default 
          git clone https://github.com/kiddin9/openwrt-packages.git
          cd package
          mkdir openwrt-packages
          mv ../openwrt-packages/luci-app-aliddns openwrt-packages/luci-app-aliddns
          mv ../openwrt-packages/luci-app-eqos openwrt-packages/luci-app-eqos
          mv ../openwrt-packages/luci-app-wolplus openwrt-packages/luci-app-wolplus
          rm -rf ../openwrt-packages/
          cd lean
          rm -rf luci-theme-argon  
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          # Device type
          # CONFIG_TARGET_ROOTFS_PARTSIZE=480
          CONFIG_TARGET_IMAGES_GZIP=y
          # IPv6
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          # Storage
          CONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb3=y
          # CONFIG_PACKAGE_kmod-usb-storage=y
          # CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_automount=n
          # CONFIG_PACKAGE_kmod-fs-btrfs=y
          # CONFIG_PACKAGE_kmod-fs-exfat=y
          # CONFIG_PACKAGE_kmod-fs-ext4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-xfs=y

          # APP
          CONFIG_PACKAGE_luci-app-aria2=n
          # CONFIG_PACKAGE_luci-app-aliyundrive-fuse=y
          # CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y
          CONFIG_PACKAGE_luci-app-baidupcs-web=n
          CONFIG_PACKAGE_luci-app-ddns=y
          # CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-frps=y
          # CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-qos=y
          CONFIG_PACKAGE_luci-app-ramfree=n
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_SHORTCUT_FE_CM=y
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_BBR_CCA=y
          # CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_PDNSD=y  
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-uugamebooster=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-webdav=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-xlnetacc=y
          CONFIG_PACKAGE_luci-app-zerotier=n
          # Third party packages
          CONFIG_PACKAGE_luci-app-aliddns=y
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-wol=n
          CONFIG_PACKAGE_luci-app-wolplus=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_kmod-usb-net-rndis=y

          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Download package source code
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-X86-PVE
          path: bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.img.gz
